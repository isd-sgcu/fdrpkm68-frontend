@import "tailwindcss";

/* Fonts */
@import '@fontsource-variable/orbitron';
@import '@fontsource/ibm-plex-sans-thai';
@import '@fontsource/zen-dots';

body {
  font-family: 'IBM Plex Sans Thai', sans-serif;
}

/* Font Family Registrations */
@theme {
  --font-family-zen-dots: "Zen Dots", cursive;
  --font-family-orbitron: "Orbitron Variable", "Orbitron", sans-serif;
  --font-family-ibm-plex-sans-thai: "IBM Plex Sans Thai", sans-serif;
  --font-sans: 'IBM Plex Sans Thai', 'sans-serif';
  --font-zen-dots: 'Zen Dots', 'sans-serif';
}

/* Cut edge Classes */

/* Spec 
>> all edge based at 20px but can be changed by size
>> individual(t-l,t-r,b-l,b-r), 
>> t,b,l,r group
>> cut by size sm md lg (due to vatient edge size in figma components, i prepared it just in case) 
*/

/* Cut all */
.cut-edge-all {
  clip-path: polygon(20px 0, 100% 0, 100% calc(100% - 20px), calc(100% - 20px) 100%, 0 100%, 0 20px);
}

/* Cut individual */
.cut-edge-t-l {
  clip-path: polygon(20px 0, 100% 0, 100% 100%, 0 100%, 0 20px);
}
.cut-edge-t-r {
  clip-path: polygon(0 0, calc(100% - 20px) 0, 100% 20px, 100% 100%, 0 100%);
}
.cut-edge-b-l {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 20px 100%, 0 calc(100% - 20px));
}
.cut-edge-b-r {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 20px), calc(100% - 20px) 100%, 0 100%);
}

/* Cut t,b,l,r group */
.cut-edge-top {
  clip-path: polygon(20px 0, calc(100% - 20px) 0, 100% 20px, 100% 100%, 0 100%, 0 20px);
}
.cut-edge-bottom {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 20px), calc(100% - 20px) 100%, 20px 100%, 0 calc(100% - 20px));
}
.cut-edge-left {
  clip-path: polygon(20px 0, 100% 0, 100% 100%, 20px 100%, 0 calc(100% - 20px), 0 20px);
}
.cut-edge-right {
  clip-path: polygon(0 0, calc(100% - 20px) 0, 100% 20px, 100% calc(100% - 20px), calc(100% - 20px) 100%, 0 100%);
}

/* sm (10px) */
.cut-edge-all-sm {
  clip-path: polygon(10px 0, 100% 0, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0 100%, 0 10px);
}
.cut-edge-t-l-sm {
  clip-path: polygon(10px 0, 100% 0, 100% 100%, 0 100%, 0 10px);
}
.cut-edge-t-r-sm {
  clip-path: polygon(0 0, calc(100% - 10px) 0, 100% 10px, 100% 100%, 0 100%);
}
.cut-edge-b-l-sm {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 10px 100%, 0 calc(100% - 10px));
}
.cut-edge-b-r-sm {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0 100%);
}
/* md (20px) default please see above na krub */

/* lg (30px) */
.cut-edge-all-lg {
  clip-path: polygon(30px 0, 100% 0, 100% calc(100% - 30px), calc(100% - 30px) 100%, 0 100%, 0 30px);
}
.cut-edge-t-l-lg {
  clip-path: polygon(30px 0, 100% 0, 100% 100%, 0 100%, 0 30px);
}
.cut-edge-t-r-lg {
  clip-path: polygon(0 0, calc(100% - 30px) 0, 100% 30px, 100% 100%, 0 100%);
}
.cut-edge-b-l-lg {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 30px 100%, 0 calc(100% - 30px));
}
.cut-edge-b-r-lg {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), calc(100% - 30px) 100%, 0 100%);
}

/* xl (40px) */
.cut-edge-all-xl {
  clip-path: polygon(40px 0, 100% 0, 100% calc(100% - 40px), calc(100% - 40px) 100%, 0 100%, 0 40px);
}
.cut-edge-t-l-xl {
  clip-path: polygon(40px 0, 100% 0, 100% 100%, 0 100%, 0 40px);
}
.cut-edge-t-r-xl {
  clip-path: polygon(0 0, calc(100% - 40px) 0, 100% 40px, 100% 100%, 0 100%);
}
.cut-edge-b-l-xl {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 40px 100%, 0 calc(100% - 40px));
}
.cut-edge-b-r-xl {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 40px), calc(100% - 40px) 100%, 0 100%);
}